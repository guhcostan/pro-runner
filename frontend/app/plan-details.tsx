import React from 'react';
import { View, Text, StyleSheet, ScrollView } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { StatusBar } from 'expo-status-bar';
import { Stack } from 'expo-router';

import { ProRunnerColors } from '../constants/Colors';
import { useUserStore } from '../store/userStore';
import { translateFitnessLevel, getGoalDisplayName } from '../lib/utils';

export default function PlanDetailsScreen() {
  // router removed as it's not being used
  const { user, plan } = useUserStore();

  if (!user || !plan) {
    return (
      <SafeAreaView style={styles.container}>
        <StatusBar style="light" />
        <View style={styles.loadingContainer}>
          <Text style={styles.loadingText}>Carregando detalhes do plano...</Text>
        </View>
      </SafeAreaView>
    );
  }

  const workoutTypes = [
    {
      type: 'easy',
      name: 'Corrida Leve',
      emoji: 'üö∂‚Äç‚ôÇÔ∏è',
      description: 'Base aer√≥bica e recupera√ß√£o ativa',
      pace: plan.training_paces?.easy || 'F√°cil',
      zone: 'Zona Aer√≥bica',
      environment: 'Rua/Parque',
      duration: '30-60 min',
      intensity: 'Baixa',
      tips: 'Ritmo que permite conversa f√°cil. Desenvolve a base aer√≥bica.',
    },
    {
      type: 'long',
      name: 'Corrida Longa',
      emoji: 'üèÉ‚Äç‚ôÇÔ∏è',
      description: 'Resist√™ncia aer√≥bica e endurance',
      pace: plan.training_paces?.long || 'Moderado',
      zone: 'Zona Aer√≥bica',
      environment: 'Rua/Parque',
      duration: '60-120 min',
      intensity: 'Baixa-Moderada',
      tips: 'Ritmo ligeiramente mais r√°pido que o f√°cil. Foque na dura√ß√£o.',
    },
    {
      type: 'tempo',
      name: 'Treino Tempo',
      emoji: 'üî•',
      description: 'Limiar anaer√≥bico',
      pace: plan.training_paces?.tempo || 'Limiar',
      zone: 'Zona Limiar',
      environment: 'Rua/Esteira',
      duration: '15-30 min',
      intensity: 'Moderada-Alta',
      tips: 'Ritmo "comfortavelmente dif√≠cil". Pode sustentar por ~1 hora.',
    },
    {
      type: 'interval',
      name: 'Treino Intervalado',
      emoji: '‚ö°',
      description: 'VO2 m√°ximo e velocidade',
      pace: plan.training_paces?.interval || 'Pace 5K',
      zone: 'Zona VO2 Max',
      environment: 'Pista/Rua plana',
      duration: '20-40 min',
      intensity: 'Alta',
      tips: 'Pace de 5K. Aquecimento obrigat√≥rio. Respeite a recupera√ß√£o.',
    },
    {
      type: 'recovery',
      name: 'Recupera√ß√£o',
      emoji: 'üßò‚Äç‚ôÇÔ∏è',
      description: 'Recupera√ß√£o ativa',
      pace: plan.training_paces?.recovery || 'Muito f√°cil',
      zone: 'Zona Regenerativa',
      environment: 'Rua/Parque',
      duration: '20-40 min',
      intensity: 'Muito Baixa',
      tips: 'Mais lento que corrida f√°cil. Foque na recupera√ß√£o muscular.',
    },
    // Novos tipos baseados em metodologias cient√≠ficas
    {
      type: 'fartlek',
      name: 'Fartlek (Jogo de Velocidade)',
      emoji: 'üé≤',
      description: 'Varia√ß√µes de ritmo espont√¢neas',
      pace: 'F√°cil ‚Üí 5K',
      zone: 'Zonas M√∫ltiplas',
      environment: 'Qualquer terreno',
      duration: '20-45 min',
      intensity: 'Vari√°vel',
      tips: 'Metodologia sueca. Varie o ritmo conforme se sente. Divertido!',
    },
    {
      type: 'hill',
      name: 'Treino de Subidas',
      emoji: '‚õ∞Ô∏è',
      description: 'For√ßa espec√≠fica e pot√™ncia',
      pace: 'Esfor√ßo 5K em subida',
      zone: 'Zona Neuromuscular',
      environment: 'Subidas 5-8%',
      duration: '30-50 min',
      intensity: 'Alta',
      tips: 'Desenvolve for√ßa das pernas. Passos curtos e frequentes.',
    },
    {
      type: 'progressive',
      name: 'Corrida Progressiva',
      emoji: 'üìà',
      description: 'Acelera gradualmente',
      pace: 'F√°cil ‚Üí Tempo',
      zone: 'Progress√£o de Zonas',
      environment: 'Rua/Pista',
      duration: '30-60 min',
      intensity: 'Crescente',
      tips: 'Comece devagar, termine forte. √ìtimo para controle de pace.',
    },
    {
      type: 'ladder',
      name: 'Treino em Escada',
      emoji: 'ü™ú',
      description: 'Intervalos crescentes/decrescentes',
      pace: plan.training_paces?.interval || 'Pace 5K',
      zone: 'Zona VO2 Max',
      environment: 'Pista/Rua plana',
      duration: '25-40 min',
      intensity: 'Alta',
      tips: 'Exemplo: 1-2-3-2-1min. Mantenha o mesmo pace em todos.',
    },
    {
      type: 'long_surges',
      name: 'Long√£o com Surges',
      emoji: 'üèÉ‚Äç‚ôÇÔ∏èüí®',
      description: 'Long√£o + acelera√ß√µes de limiar',
      pace: `${plan.training_paces?.long || 'Moderado'} + Surges`,
      zone: 'Aer√≥bica + Limiar',
      environment: 'Rua/Parque',
      duration: '60-120 min',
      intensity: 'Moderada + Picos',
      tips: 'Fa√ßa surges de 1-2min nos √∫ltimos 60% da corrida.',
    },
    {
      type: 'progressive_long',
      name: 'Long√£o Progressivo',
      emoji: 'üèÉ‚Äç‚ôÇÔ∏èüìà',
      description: 'Long√£o que acelera gradualmente',
      pace: 'F√°cil ‚Üí Tempo',
      zone: 'Aer√≥bica ‚Üí Limiar',
      environment: 'Rua/Parque',
      duration: '60-120 min',
      intensity: 'Crescente',
      tips: 'Metodologia africana. Termine os √∫ltimos km em ritmo forte.',
    },
  ];

  const zones = [
    { zone: 'Z1', name: 'Recupera√ß√£o', color: '#4CAF50', description: 'Muito f√°cil, respira√ß√£o natural' },
    { zone: 'Z2', name: 'Aer√≥bico', color: '#2196F3', description: 'F√°cil, pode conversar normalmente' },
    { zone: 'Z3', name: 'Limiar', color: '#FF9800', description: 'Moderado, conversa dif√≠cil' },
    { zone: 'Z4', name: 'VO2 Max', color: '#F44336', description: 'Dif√≠cil, poucas palavras' },
    { zone: 'Z5', name: 'Neuromuscular', color: '#9C27B0', description: 'M√°ximo, sem conversa' },
  ];

  return (
    <>
      <Stack.Screen 
        options={{
          title: "Detalhes do Plano",
          headerBackTitle: "Voltar",
          headerStyle: {
            backgroundColor: ProRunnerColors.background,
          },
          headerTintColor: ProRunnerColors.textPrimary,
          headerTitleStyle: {
            fontWeight: '600',
          },
        }} 
      />
      <SafeAreaView style={styles.container}>
        <StatusBar style="light" />
        
        <ScrollView style={styles.scrollView}>
        {/* Plan Summary */}
        <View style={styles.summaryCard}>
          <Text style={styles.cardTitle}>üìã Resumo do Plano</Text>
          <View style={styles.summaryRow}>
            <Text style={styles.summaryLabel}>Objetivo:</Text>
            <Text style={styles.summaryValue}>{getGoalDisplayName(plan.goal)}</Text>
          </View>
          <View style={styles.summaryRow}>
            <Text style={styles.summaryLabel}>Dura√ß√£o:</Text>
            <Text style={styles.summaryValue}>{plan.total_weeks} semanas</Text>
          </View>
          <View style={styles.summaryRow}>
            <Text style={styles.summaryLabel}>N√≠vel:</Text>
            <Text style={styles.summaryValue}>{translateFitnessLevel(plan.fitness_level)}</Text>
          </View>
          {plan.vdot && (
            <View style={styles.summaryRow}>
              <Text style={styles.summaryLabel}>VDOT:</Text>
              <Text style={styles.summaryValue}>{Math.round(plan.vdot)}</Text>
            </View>
          )}
          <View style={styles.summaryRow}>
            <Text style={styles.summaryLabel}>Pace Base (5K):</Text>
            <Text style={styles.summaryValue}>{plan.base_pace}/km</Text>
          </View>
          {plan.estimated_capabilities && (
            <View style={styles.summaryRow}>
              <Text style={styles.summaryLabel}>Capacidade M√°xima:</Text>
              <Text style={styles.summaryValue}>{plan.estimated_capabilities.currentMaxDistance}km</Text>
            </View>
          )}
        </View>

        {/* VDOT Training Paces */}
        {plan.training_paces && (
          <View style={styles.summaryCard}>
            <Text style={styles.cardTitle}>üéØ Paces de Treino (VDOT)</Text>
            <Text style={styles.cardSubtitle}>Baseados na metodologia cient√≠fica de Jack Daniels</Text>
            <View style={styles.summaryRow}>
              <Text style={styles.summaryLabel}>F√°cil (Easy):</Text>
              <Text style={styles.summaryValue}>{plan.training_paces.easy}/km</Text>
            </View>
            <View style={styles.summaryRow}>
              <Text style={styles.summaryLabel}>Long√£o (Long):</Text>
              <Text style={styles.summaryValue}>{plan.training_paces.long}/km</Text>
            </View>
            <View style={styles.summaryRow}>
              <Text style={styles.summaryLabel}>Tempo (Threshold):</Text>
              <Text style={styles.summaryValue}>{plan.training_paces.tempo}/km</Text>
            </View>
            <View style={styles.summaryRow}>
              <Text style={styles.summaryLabel}>Tiros (Interval):</Text>
              <Text style={styles.summaryValue}>{plan.training_paces.interval}/km</Text>
            </View>
            <View style={styles.summaryRow}>
              <Text style={styles.summaryLabel}>Recupera√ß√£o:</Text>
              <Text style={styles.summaryValue}>{plan.training_paces.recovery}/km</Text>
            </View>
          </View>
        )}

        {/* Validation Warning */}
        {plan.validation && plan.validation.warning && (
          <View style={[styles.summaryCard, { backgroundColor: ProRunnerColors.warning + '20', borderLeftWidth: 4, borderLeftColor: ProRunnerColors.warning }]}>
            <Text style={styles.cardTitle}>‚ö†Ô∏è Aviso Importante</Text>
            <Text style={[styles.summaryValue, { color: ProRunnerColors.warning }]}>
              {plan.validation.warning}
            </Text>
          </View>
        )}

        {/* Workout Types */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>üèÉ‚Äç‚ôÇÔ∏è Tipos de Treino</Text>
          {workoutTypes.map((workout, index) => (
            <View key={index} style={styles.workoutCard}>
              <View style={styles.workoutHeader}>
                <Text style={styles.workoutEmoji}>{workout.emoji}</Text>
                <View style={styles.workoutInfo}>
                  <Text style={styles.workoutName}>{workout.name}</Text>
                  <Text style={styles.workoutDescription}>{workout.description}</Text>
                </View>
              </View>
              
              <View style={styles.workoutDetails}>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>Zona/Pace:</Text>
                  <Text style={styles.detailValue}>{workout.pace}</Text>
                </View>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>Local:</Text>
                  <Text style={styles.detailValue}>{workout.environment}</Text>
                </View>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>Dura√ß√£o:</Text>
                  <Text style={styles.detailValue}>{workout.duration}</Text>
                </View>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>Intensidade:</Text>
                  <Text style={styles.detailValue}>{workout.intensity}</Text>
                </View>
              </View>
              
              <View style={styles.tipsContainer}>
                <Text style={styles.tipsTitle}>üí° Dicas:</Text>
                <Text style={styles.tipsText}>{workout.tips}</Text>
              </View>
            </View>
          ))}
        </View>

        {/* Heart Rate Zones */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>‚ù§Ô∏è Zonas de Frequ√™ncia Card√≠aca</Text>
          {zones.map((zone, index) => (
            <View key={index} style={styles.zoneCard}>
              <View style={[styles.zoneIndicator, { backgroundColor: zone.color }]} />
              <View style={styles.zoneInfo}>
                <Text style={styles.zoneName}>{zone.zone} - {zone.name}</Text>
                <Text style={styles.zoneDescription}>{zone.description}</Text>
              </View>
            </View>
          ))}
        </View>

        {/* Environment Tips */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>üåç Dicas de Ambiente</Text>
          <View style={styles.environmentCard}>
            <Text style={styles.environmentTitle}>üèÉ‚Äç‚ôÇÔ∏è Corrida na Rua</Text>
            <Text style={styles.environmentText}>
              ‚Ä¢ Melhor para treinos longos e tempo{'\n'}
              ‚Ä¢ Terreno variado fortalece m√∫sculos{'\n'}
              ‚Ä¢ Aten√ß√£o ao tr√¢nsito e piso irregular{'\n'}
              ‚Ä¢ Use roupas reflexivas no escuro
            </Text>
          </View>
          
          <View style={styles.environmentCard}>
            <Text style={styles.environmentTitle}>üèÉ‚Äç‚ôÇÔ∏è Corrida na Esteira</Text>
            <Text style={styles.environmentText}>
              ‚Ä¢ Ideal para treinos de velocidade{'\n'}
              ‚Ä¢ Controle total do ritmo e inclina√ß√£o{'\n'}
              ‚Ä¢ Seguro em qualquer clima{'\n'}
              ‚Ä¢ Use inclina√ß√£o de 1-2% para simular vento
            </Text>
          </View>
          
          <View style={styles.environmentCard}>
            <Text style={styles.environmentTitle}>üèÉ‚Äç‚ôÇÔ∏è Pista de Atletismo</Text>
            <Text style={styles.environmentText}>
              ‚Ä¢ Perfeita para intervalos e tiros{'\n'}
              ‚Ä¢ Superf√≠cie consistente e medida{'\n'}
              ‚Ä¢ 400m = 1 volta completa{'\n'}
              ‚Ä¢ Corra no sentido anti-hor√°rio
            </Text>
          </View>
        </View>

        <View style={styles.spacer} />
      </ScrollView>
    </SafeAreaView>
    </>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: ProRunnerColors.background,
  },

  scrollView: {
    flex: 1,
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  loadingText: {
    color: ProRunnerColors.textSecondary,
    fontSize: 16,
  },
  summaryCard: {
    backgroundColor: ProRunnerColors.surface,
    margin: 16,
    borderRadius: 12,
    padding: 20,
    borderWidth: 1,
    borderColor: ProRunnerColors.border,
  },
  cardTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: ProRunnerColors.textPrimary,
    marginBottom: 16,
  },
  cardSubtitle: {
    fontSize: 14,
    color: ProRunnerColors.textSecondary,
    marginBottom: 12,
    fontStyle: 'italic',
  },
  summaryRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 8,
  },
  summaryLabel: {
    fontSize: 16,
    color: ProRunnerColors.textSecondary,
  },
  summaryValue: {
    fontSize: 16,
    fontWeight: '600',
    color: ProRunnerColors.textPrimary,
  },
  section: {
    paddingHorizontal: 16,
    marginBottom: 24,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: ProRunnerColors.textPrimary,
    marginBottom: 16,
  },
  workoutCard: {
    backgroundColor: ProRunnerColors.surface,
    borderRadius: 12,
    padding: 16,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: ProRunnerColors.border,
  },
  workoutHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  workoutEmoji: {
    fontSize: 24,
    marginRight: 12,
  },
  workoutInfo: {
    flex: 1,
  },
  workoutName: {
    fontSize: 16,
    fontWeight: '600',
    color: ProRunnerColors.textPrimary,
    marginBottom: 2,
  },
  workoutDescription: {
    fontSize: 14,
    color: ProRunnerColors.textSecondary,
  },
  workoutDetails: {
    marginBottom: 12,
  },
  detailRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 4,
  },
  detailLabel: {
    fontSize: 14,
    color: ProRunnerColors.textSecondary,
  },
  detailValue: {
    fontSize: 14,
    fontWeight: '500',
    color: ProRunnerColors.textPrimary,
  },
  tipsContainer: {
    backgroundColor: `${ProRunnerColors.primary}10`,
    borderRadius: 8,
    padding: 12,
  },
  tipsTitle: {
    fontSize: 14,
    fontWeight: '600',
    color: ProRunnerColors.primary,
    marginBottom: 4,
  },
  tipsText: {
    fontSize: 13,
    color: ProRunnerColors.textSecondary,
    lineHeight: 18,
  },
  zoneCard: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: ProRunnerColors.surface,
    borderRadius: 8,
    padding: 12,
    marginBottom: 8,
    borderWidth: 1,
    borderColor: ProRunnerColors.border,
  },
  zoneIndicator: {
    width: 12,
    height: 12,
    borderRadius: 6,
    marginRight: 12,
  },
  zoneInfo: {
    flex: 1,
  },
  zoneName: {
    fontSize: 14,
    fontWeight: '600',
    color: ProRunnerColors.textPrimary,
    marginBottom: 2,
  },
  zoneDescription: {
    fontSize: 12,
    color: ProRunnerColors.textSecondary,
  },
  environmentCard: {
    backgroundColor: ProRunnerColors.surface,
    borderRadius: 8,
    padding: 16,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: ProRunnerColors.border,
  },
  environmentTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: ProRunnerColors.textPrimary,
    marginBottom: 8,
  },
  environmentText: {
    fontSize: 14,
    color: ProRunnerColors.textSecondary,
    lineHeight: 20,
  },
  spacer: {
    height: 40,
  },
}); 