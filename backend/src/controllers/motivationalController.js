const supabase = require('../config/supabase');

// Fallback quotes in memory (caso o banco n√£o esteja configurado ainda)
const fallbackQuotes = {
  pt: [
    'üèÉ‚Äç‚ôÇÔ∏è Cada passo te leva mais perto do seu objetivo!',
    'üí™ O √∫nico treino ruim √© aquele que voc√™ n√£o fez.',
    'üåü Voc√™ √© mais forte do que suas desculpas.',
    'üéØ Foque no progresso, n√£o na perfei√ß√£o.',
    'üî• A dor √© tempor√°ria, a satisfa√ß√£o √© para sempre.',
    '‚ö° Seus limites s√£o apenas a sua mente.',
    'üöÄ Comece devagar, mas n√£o pare jamais.',
    'üíé Grandes resultados exigem grandes esfor√ßos.',
    'üåÖ Cada manh√£ √© uma nova oportunidade de ser melhor.',
    'üèÜ Champions s√£o feitos quando ningu√©m est√° olhando.',
    'üí´ Acredite em voc√™ e todo o resto se encaixa.',
    'üé™ A jornada de mil quil√¥metros come√ßa com um passo.',
    '‚≠ê Voc√™ n√£o precisa ser perfeito, apenas constante.',
    'üåà Ap√≥s a tempestade, sempre vem o arco-√≠ris.',
    'üîã Energia que voc√™ n√£o usa hoje, voc√™ perde para sempre.',
    'üåä Seja como a √°gua: persistente e impar√°vel.',
    'üé® Pinte sua vida com cores vibrantes atrav√©s do esporte.',
    'üå∏ Flores√ßa onde voc√™ foi plantado, mesmo que seja dif√≠cil.',
    'üéµ Encontre seu ritmo e dance com a vida.',
    'üåü Cada pequeno progresso merece ser celebrado.',
    'üèîÔ∏è As montanhas n√£o se movem por si, mas voc√™ pode escal√°-las.',
    'üî• Transforme sua paix√£o em prop√≥sito.',
    'üíù O melhor investimento √© em voc√™ mesmo.',
    'üåç Seja a mudan√ßa que voc√™ quer ver no mundo.',
    '‚ö° A velocidade n√£o importa tanto quanto a dire√ß√£o.',
    'üéØ Mire na lua, mesmo se errar cair√° entre as estrelas.',
    'üåü Sua √∫nica competi√ß√£o √© quem voc√™ foi ontem.',
    'ü¶ã Metamorfose acontece fora da zona de conforto.',
    'üå∫ Cultive paci√™ncia, os resultados est√£o crescendo.',
    'üéä Celebre cada vit√≥ria, por menor que seja.',
  ],
  en: [
    'üèÉ‚Äç‚ôÇÔ∏è Every step takes you closer to your goal!',
    'üí™ The only bad workout is the one you didn\'t do.',
    'üåü You are stronger than your excuses.',
    'üéØ Focus on progress, not perfection.',
    'üî• Pain is temporary, satisfaction is forever.',
    '‚ö° Your limits are just your mind.',
    'üöÄ Start slow, but never stop.',
    'üíé Great results require great efforts.',
    'üåÖ Every morning is a new opportunity to be better.',
    'üèÜ Champions are made when nobody is watching.',
    'üí´ Believe in yourself and everything else falls into place.',
    'üé™ The journey of a thousand miles begins with one step.',
    '‚≠ê You don\'t need to be perfect, just consistent.',
    'üåà After the storm, there\'s always a rainbow.',
    'üîã Energy you don\'t use today, you lose forever.',
    'üåä Be like water: persistent and unstoppable.',
    'üé® Paint your life with vibrant colors through sport.',
    'üå∏ Bloom where you are planted, even if it\'s difficult.',
    'üéµ Find your rhythm and dance with life.',
    'üåü Every small progress deserves to be celebrated.',
    'üèîÔ∏è Mountains don\'t move by themselves, but you can climb them.',
    'üî• Transform your passion into purpose.',
    'üíù The best investment is in yourself.',
    'üåç Be the change you want to see in the world.',
    '‚ö° Speed doesn\'t matter as much as direction.',
    'üéØ Aim for the moon, even if you miss you\'ll land among the stars.',
    'üåü Your only competition is who you were yesterday.',
    'ü¶ã Metamorphosis happens outside the comfort zone.',
    'üå∫ Cultivate patience, results are growing.',
    'üéä Celebrate every victory, no matter how small.',
  ]
};

const getDailyQuote = async (req, res) => {
  try {
    const { language = 'pt' } = req.query;
    
    try {
      // Tenta usar o banco primeiro
      const { data, error } = await supabase.rpc('get_daily_quote', {
        user_language: language
      });
      
      if (!error && data && data.length > 0) {
        const result = data[0];
        return res.json({
          success: true,
          data: {
            quote: result.quote,
            date: result.date,
            language: result.language
          }
        });
      }
    } catch (dbError) {
      console.log('Database fallback, using in-memory quotes');
    }
    
    // Fallback para quotes em mem√≥ria
    const today = new Date();
    const start = new Date(today.getFullYear(), 0, 0);
    const diff = today - start;
    const dayOfYear = Math.floor(diff / (1000 * 60 * 60 * 24));
    
    const quotes = fallbackQuotes[language] || fallbackQuotes.pt;
    const quoteIndex = dayOfYear % quotes.length;
    const quote = quotes[quoteIndex];
    
    res.json({
      success: true,
      data: {
        quote,
        date: today.toISOString().split('T')[0],
        language
      }
    });
  } catch (error) {
    console.error('Error getting daily quote:', error);
    res.status(500).json({
      success: false,
      error: 'Failed to get daily quote'
    });
  }
};

const getRandomQuote = async (req, res) => {
  try {
    const { language = 'pt' } = req.query;
    
    try {
      // Tenta usar o banco primeiro
      const { data, error } = await supabase.rpc('get_random_quote', {
        user_language: language
      });
      
      if (!error && data && data.length > 0) {
        const result = data[0];
        return res.json({
          success: true,
          data: {
            quote: result.quote,
            language: result.language
          }
        });
      }
    } catch (dbError) {
      console.log('Database fallback, using in-memory quotes');
    }
    
    // Fallback para quotes em mem√≥ria
    const quotes = fallbackQuotes[language] || fallbackQuotes.pt;
    const randomIndex = Math.floor(Math.random() * quotes.length);
    const quote = quotes[randomIndex];
    
    res.json({
      success: true,
      data: {
        quote,
        language
      }
    });
  } catch (error) {
    console.error('Error getting random quote:', error);
    res.status(500).json({
      success: false,
      error: 'Failed to get random quote'
    });
  }
};

module.exports = {
  getDailyQuote,
  getRandomQuote
}; 